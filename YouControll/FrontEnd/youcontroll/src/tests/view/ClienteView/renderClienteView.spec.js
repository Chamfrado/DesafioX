// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('RenderClienteView', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('RenderClienteView', async function() {
    // Test name: RenderClienteView
    // Step # | name | target | value
    // 1 | open | /login | 
    await driver.get("http://localhost:3000/login")
    // 2 | setWindowSize | 945x1020 | 
    await driver.manage().window().setRect({ width: 945, height: 1020 })
    // 3 | type | id=username | chamfrado
    await driver.findElement(By.id("username")).sendKeys("chamfrado")
    // 4 | type | id=password | 123
    await driver.findElement(By.id("password")).sendKeys("123")
    // 5 | click | id=btnLogin | 
    await driver.findElement(By.id("btnLogin")).click()
    // 6 | assertElementPresent | id=ClienteContainer | 
    {
      const elements = await driver.findElements(By.id("ClienteContainer"))
      assert(elements.length)
    }
    // 7 | assertElementPresent | id=tableCliente | 
    {
      const elements = await driver.findElements(By.id("tableCliente"))
      assert(elements.length)
    }
    // 8 | assertElementPresent | id=header | 
    {
      const elements = await driver.findElements(By.id("header"))
      assert(elements.length)
    }
  })
})
